function imageSlide(e,t){var n=null,i=t.extra||2,o=document.getElementById(e),a=document.getElementsByClassName(t.itemClassName||"js-slide-item"),c=document.getElementsByClassName(t.pointClassName||"js-slide-point"),l=t.duration||350,s=a.length+i,m=null;if(o&&a&&c){if(a.length<2)return a[0].style.margin="0 auto",void Array.prototype.slice.call(c).map(function(e,t){e.style.display="none"});var r=function(e,t){var n=document.createDocumentFragment(),i=e.length;return _.range(i+2*t).forEach(function(t,o){var a=(o%i+1)%i;n.appendChild(e[a].cloneNode(!0))}),n}(a,i);o.innerHTML="",o.appendChild(r),d(),window.addEventListener("resize",d,!1)}function d(){n||(n=setTimeout(function(){n=null,o.style.position="relative",o.style.left=(window.innerWidth-a[0].clientWidth)/2+"px",p(0),(m=Flipsnap(o,{distance:a[0].clientWidth,maxPoint:s,duration:l})).moveToPoint(i,0),m.element.addEventListener("fspointmove",u),Array.prototype.slice.call(c).forEach(function(e,t){e.addEventListener("click",function(e){console.log(t+i),m.moveToPoint(t+i)},!1)})},66))}function u(e){m.currentPoint>m.maxPoint-1?v(!0):m.currentPoint<i?v():p(m.currentPoint-i)}function v(e){var t,n;e?(t=m.maxPoint,n=i):(t=1,n=m.maxPoint-1),m.element.removeEventListener("fspointmove",u),m.moveToPoint(t),timer=setTimeout(function(){m.moveToPoint(n,0),p(n-i),m.element.addEventListener("fspointmove",u),clearTimeout(timer)},l+3)}function p(e){Array.prototype.slice.call(c).forEach(function(t,n){n!==e||t.className.match("isActive")?n!==e&&t.className.match("isActive")&&(t.className=t.className.replace(" isActive","")):t.className+=" isActive"})}}!function(){var e,t,n,i=document.getElementById("menu-button"),o=document.getElementById("wrapper"),a=document.getElementById("overlay"),c=(e=o,n=" "+(t="isOpened"),function(i){e.className.indexOf(t)>-1?e.className=e.className.replace(n,""):e.className+=n});i&&a&&(i.addEventListener("click",c,!1),a.addEventListener("click",c,!1))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiaW1hZ2VTbGlkZSIsImlkIiwib3B0aW9ucyIsInJlc2l6ZVRpbWVyIiwiZXh0cmEiLCJ3cmFwcGVyIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIml0ZW1zIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsIml0ZW1DbGFzc05hbWUiLCJwb2ludHMiLCJwb2ludENsYXNzTmFtZSIsImR1cmF0aW9uIiwibWF4UG9pbnQiLCJsZW5ndGgiLCJmbGlwc25hcCIsInN0eWxlIiwibWFyZ2luIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJzbGljZSIsImNhbGwiLCJtYXAiLCJwb2ludCIsImkiLCJkaXNwbGF5IiwiZHVtbWllcyIsImVsbXMiLCJyZXMiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwibGVuIiwiXyIsInJhbmdlIiwiZm9yRWFjaCIsIngiLCJpbmQiLCJhcHBlbmRDaGlsZCIsImNsb25lTm9kZSIsImNyZWF0ZUR1bW15IiwiaW5uZXJIVE1MIiwiaW5pdCIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJzZXRUaW1lb3V0IiwicG9zaXRpb24iLCJsZWZ0IiwiaW5uZXJXaWR0aCIsImNsaWVudFdpZHRoIiwiYWN0aXZlUG9pbnQiLCJGbGlwc25hcCIsImRpc3RhbmNlIiwibW92ZVRvUG9pbnQiLCJlbGVtZW50IiwibW92ZSIsImUiLCJjb25zb2xlIiwibG9nIiwiZXZ0IiwiY3VycmVudFBvaW50IiwiYmFja1RvIiwiaXNTdGFydCIsInRlbXAiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwidGltZXIiLCJjbGVhclRpbWVvdXQiLCJjbGFzc05hbWUiLCJtYXRjaCIsInJlcGxhY2UiLCJ0YXJnZXRET00iLCJfY2xhc3NOYW1lIiwibWVudUJ1dHRvbiIsIm92ZXJsYXkiLCJ0b2dnbGVNZW51IiwiaW5kZXhPZiJdLCJtYXBwaW5ncyI6IkFBOEJBLFNBQVNBLFdBQVlDLEVBQUlDLEdBQ3JCLElBQUlDLEVBQWMsS0FDZEMs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RUFBVWxFLFNBQVNDLGVBQWUsV0FDbENrRSxHQWJZSixFQWFRaEUsRUFaaEI2RCxFQUFZLEtBRE9JLEVBYU0sWUFYdEIsU0FBU2YsR0FDVGMsRUFBVUgsVUFBVVEsUUFBUUosSUFBYSxFQUN4Q0QsRUFBVUgsVUFBWUcsRUFBVUgsVUFBVUUsUUFBUUYsRUFBVyxJQUU3REcsRUFBVUgsV0FBYUEsSUFTaENLLEdBQWNDLElBQ2JELEVBQVc1QixpQkFBaUIsUUFBUzhCLEdBQVksR0FDakRELEVBQVE3QixpQkFBaUIsUUFBUzhCLEdBQVksSUFsQnREIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKiBtYWluLmpzICovXG5cbi8qIOODoeODi+ODpeODvCAqL1xuKGZ1bmN0aW9uKCl7XG4gICAgZnVuY3Rpb24gdG9nZ2xlKHRhcmdldERPTSwgX2NsYXNzTmFtZSwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIGNsYXNzTmFtZSA9ICcgJytfY2xhc3NOYW1lO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgaWYodGFyZ2V0RE9NLmNsYXNzTmFtZS5pbmRleE9mKF9jbGFzc05hbWUpPi0xKSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0RE9NLmNsYXNzTmFtZSA9IHRhcmdldERPTS5jbGFzc05hbWUucmVwbGFjZShjbGFzc05hbWUsICcnKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0RE9NLmNsYXNzTmFtZSArPSBjbGFzc05hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmFyIG1lbnVCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWVudS1idXR0b24nKSxcbiAgICAgICAgd3JhcHBlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3cmFwcGVyJyksXG4gICAgICAgIG92ZXJsYXkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnb3ZlcmxheScpLFxuICAgICAgICB0b2dnbGVNZW51ID0gdG9nZ2xlKHdyYXBwZXIsICdpc09wZW5lZCcpO1xuXG4gICAgaWYobWVudUJ1dHRvbiAmJiBvdmVybGF5KSB7XG4gICAgICAgIG1lbnVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0b2dnbGVNZW51LCBmYWxzZSk7XG4gICAgICAgIG92ZXJsYXkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0b2dnbGVNZW51LCBmYWxzZSk7XG4gICAgfVxuXG59KCkpO1xuXG4vKiDnlLvlg4/jgrnjg6njgqTjg4Djg7wgKi9cbi8vIEBwYXJhbSB7c3RyaW5nfSBpZCAtIOODqeODg+ODkeODvOimgee0oOOBrmlkXG4vLyBAcGFyYW0ge29iamVjdH0gb3B0aW9ucyAtIGl0ZW1DbGFzc05hbWUsIHBvaW50Q2xhc3NOYW1lLCBleHRyYeOBruOCquODl+OCt+ODp+ODsyBcbmZ1bmN0aW9uIGltYWdlU2xpZGUgKGlkLCBvcHRpb25zKSB7XG4gICAgdmFyIHJlc2l6ZVRpbWVyID0gbnVsbCxcbiAgICAgICAgZXh0cmEgPSBvcHRpb25zLmV4dHJhIHx8IDIsXG4gICAgICAgIHdyYXBwZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCksXG4gICAgICAgIGl0ZW1zID0gIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUob3B0aW9ucy5pdGVtQ2xhc3NOYW1lfHwnanMtc2xpZGUtaXRlbScpLFxuICAgICAgICBwb2ludHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKG9wdGlvbnMucG9pbnRDbGFzc05hbWV8fCdqcy1zbGlkZS1wb2ludCcpLFxuICAgICAgICBkdXJhdGlvbiA9IG9wdGlvbnMuZHVyYXRpb24gfHwgMzUwLFxuICAgICAgICBtYXhQb2ludCA9IGl0ZW1zLmxlbmd0aCsoZXh0cmEpLFxuICAgICAgICBmbGlwc25hcCA9IG51bGw7XG5cbiAgICBpZighd3JhcHBlciB8fCAhaXRlbXMgfHwgIXBvaW50cykgcmV0dXJuO1xuICAgIFxuICAgIC8vIOimgee0oOOBjDLjgaTku6XkuIvjga7loLTlkIjjgIHjgqTjg7PjgrjjgrHjg7zjgr/jg7zjgpLmtojjgZfjgablh6bnkIbjgpLlgZzmraJcbiAgICBpZihpdGVtcy5sZW5ndGggPCAyKSB7XG4gICAgICAgIGl0ZW1zWzBdLnN0eWxlLm1hcmdpbiA9ICcwIGF1dG8nOyBcbiAgICAgICAgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwocG9pbnRzKS5tYXAoZnVuY3Rpb24ocG9pbnQsIGkpIHtcbiAgICAgICAgICAgIHBvaW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8g44OA44Of44O844KS5L2c5oiQXG4gICAgICAgIHZhciBkdW1taWVzID1jcmVhdGVEdW1teShpdGVtcywgZXh0cmEpO1xuICAgICAgICB3cmFwcGVyLmlubmVySFRNTD0nJztcbiAgICAgICAgd3JhcHBlci5hcHBlbmRDaGlsZChkdW1taWVzKTtcblxuICAgICAgICBpbml0KCk7XG5cbiAgICAgICAgLy8g44Oq44K144Kk44K644GV44KM44Gf44KJ6KiI566X44GX55u044GXXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBpbml0LCBmYWxzZSk7XG4gICAgfVxuXG5cbiAgICAvLyDjgrvjg7Pjgr/jg6rjg7PjgrDjgZfjgabjgIHlho3oqIjnrpdcbiAgICBmdW5jdGlvbiBpbml0ICgpIHtcbiAgICAgICAgaWYoIXJlc2l6ZVRpbWVyKSB7XG4gICAgICAgICAgICByZXNpemVUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAvLyDjgr/jgqTjg57jg7zjgpLmiLvjgZlcbiAgICAgICAgICAgICAgICByZXNpemVUaW1lciA9IG51bGw7XG5cbiAgICAgICAgICAgICAgICAvLyDjgrvjg7Pjgr/jg6rjg7PjgrDjgZnjgotcbiAgICAgICAgICAgICAgICB3cmFwcGVyLnN0eWxlLnBvc2l0aW9uID0gJ3JlbGF0aXZlJztcbiAgICAgICAgICAgICAgICB3cmFwcGVyLnN0eWxlLmxlZnQgPSAod2luZG93LmlubmVyV2lkdGggLSBpdGVtc1swXS5jbGllbnRXaWR0aCkvMisncHgnO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIOODneOCpOODs+OCv+OCkuOCu+ODg+ODiFxuICAgICAgICAgICAgICAgIGFjdGl2ZVBvaW50KDApO1xuXG4gICAgICAgICAgICAgICAgLy8g44Kr44Or44O844K744Or44KS6LW35YuVIFxuICAgICAgICAgICAgICAgIGZsaXBzbmFwID0gRmxpcHNuYXAod3JhcHBlciwge1xuICAgICAgICAgICAgICAgICAgICBkaXN0YW5jZTogaXRlbXNbMF0uY2xpZW50V2lkdGgsXG4gICAgICAgICAgICAgICAgICAgIG1heFBvaW50OiBtYXhQb2ludCxcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IGR1cmF0aW9uXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgLy8g5a6f6Zqb44GvMS0z44Gu56+E5Zuy44Gn5YuV44GL44GZ44Gf44KB44CB5Yid5pyf5L2N572u44KS56e75YuVXG4gICAgICAgICAgICAgICAgZmxpcHNuYXAubW92ZVRvUG9pbnQoZXh0cmEsMCk7XG5cbiAgICAgICAgICAgICAgICAvLyDjgrnjg6njgqTjg4njgYzli5XjgYTjgZ/jgonmrKHjgpLoqIjnrpfjgZnjgotcbiAgICAgICAgICAgICAgICBmbGlwc25hcC5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2ZzcG9pbnRtb3ZlJywgbW92ZSApO1xuXG4gICAgICAgICAgICAgICAgLy8g44Od44Kk44Oz44K/44Gn5YuV44GL44Gb44KL44KI44GG44Gr44GZ44KLXG4gICAgICAgICAgICAgICAgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwocG9pbnRzKS5mb3JFYWNoKGZ1bmN0aW9uKHBvaW50LCBpKXtcbiAgICAgICAgICAgICAgICAgICAgcG9pbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGkrZXh0cmEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZmxpcHNuYXAubW92ZVRvUG9pbnQoaStleHRyYSk7XG4gICAgICAgICAgICAgICAgICAgIH0sIGZhbHNlKVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9LCA2Nik7XG4gICAgICAgIH0gICAgICAgIFxuICAgIH1cblxuXG4gICAgLy8g5oyZ5YuV44KS566h55CG44GZ44KLXG4gICAgZnVuY3Rpb24gbW92ZSAoZXZ0KSB7XG4gICAgICAgIC8vIOWPs+errzHjgaTmiYvliY3jgpLli5XjgYvjgZfjgZ/jgonmnIDliJ3jgavmiLvjgotcbiAgICAgICAgaWYoZmxpcHNuYXAuY3VycmVudFBvaW50ID4gZmxpcHNuYXAubWF4UG9pbnQgLSAxKSB7XG4gICAgICAgICAgICBiYWNrVG8odHJ1ZSk7XG5cbiAgICAgICAgLy8g5bem56uvMeOBpOaJi+WJjeOCkuWLleOBi+OBl+OBn+OCieacgOW+jOOBq+aIu+OCi1xuICAgICAgICB9IGVsc2UgaWYgKGZsaXBzbmFwLmN1cnJlbnRQb2ludCA8IGV4dHJhKSB7XG4gICAgICAgICAgICBiYWNrVG8oKTtcblxuICAgICAgICAvLyDpgJrluLjjga7np7vli5Xjgafjga/jg53jgqTjg7Pjgr/jgaDjgZHjgpLnp7vli5VcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGFjdGl2ZVBvaW50KGZsaXBzbmFwLmN1cnJlbnRQb2ludC1leHRyYSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyDnq6/jga7opoHntKDjgavmnaXjgZ/jgonjgZPjgaPjgZ3jgormiLvjgZlcbiAgICBmdW5jdGlvbiBiYWNrVG8gKGlzU3RhcnQpIHtcbiAgICAgICAgdmFyIHRlbXAsIGluZDtcbiAgICAgICAgaWYoaXNTdGFydCkge1xuICAgICAgICAgICAgdGVtcD1mbGlwc25hcC5tYXhQb2ludDsgaW5kPWV4dHJhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGVtcD0xOyBpbmQ9ZmxpcHNuYXAubWF4UG9pbnQtMTtcbiAgICAgICAgfVxuICAgICAgICAvL+S4gOaXpuOCpOODmeODs+ODiOOCkuWJiumZpOOBl+OBpuOBiuOBj1xuICAgICAgICBmbGlwc25hcC5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2ZzcG9pbnRtb3ZlJywgbW92ZSk7XG5cbiAgICAgICAgLy8g44OA44Of44O86KaB57Sg44Gr5pmu6YCa44Gr5YuV44GL44GZXG4gICAgICAgIGZsaXBzbmFwLm1vdmVUb1BvaW50KHRlbXApO1xuXG4gICAgICAgIC8vIOODgOODn+ODvOimgee0oOOBruenu+WLleOBjOWujOS6huOBl+OBiuOCj+OBo+OBpuOBi+OCieOAgeOBk+OBo+OBneOCiuS9jee9ruOCkuacrOadpeOBruimgee0oOOBq+aIu+OBmVxuICAgICAgICB0aW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIGZsaXBzbmFwLm1vdmVUb1BvaW50KGluZCwgMCk7XG4gICAgICAgICAgICAvLyDjg53jgqTjg7Pjgr/jgoLnp7vli5XjgZnjgotcbiAgICAgICAgICAgIGFjdGl2ZVBvaW50KGluZC1leHRyYSk7XG4gICAgICAgICAgICBmbGlwc25hcC5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2ZzcG9pbnRtb3ZlJywgbW92ZSk7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICB9LCBkdXJhdGlvbiszKTtcbiAgICB9XG5cbiAgICAvLyDjg4Djg5/jg7zkvZzmiJBcbiAgICBmdW5jdGlvbiBjcmVhdGVEdW1teSAoZWxtcywgZXh0cmEpIHtcbiAgICAgICAgdmFyIHJlcyA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxcbiAgICAgICAgICAgIGxlbiA9IGVsbXMubGVuZ3RoLFxuICAgICAgICAgICAgYXJyPVtdO1xuXG4gICAgICAgIF8ucmFuZ2UobGVuKyhleHRyYSoyKSkuZm9yRWFjaChmdW5jdGlvbih4LCBpKXtcbiAgICAgICAgICAgIHZhciBpbmQgPSAoaSVsZW4rMSklbGVuO1xuICAgICAgICAgICAgcmVzLmFwcGVuZENoaWxkKCBlbG1zW2luZF0uY2xvbmVOb2RlKHRydWUpICk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cblxuICAgIC8vIOODneOCpOODs+OCv+OCkuWLleOBi+OBmVxuICAgIGZ1bmN0aW9uIGFjdGl2ZVBvaW50IChpbmQpIHtcbiAgICAgICAgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwocG9pbnRzKS5mb3JFYWNoKGZ1bmN0aW9uKHBvaW50LCBpKXtcbiAgICAgICAgICAgIGlmKGkgPT09IGluZCAmJiAhcG9pbnQuY2xhc3NOYW1lLm1hdGNoKCdpc0FjdGl2ZScpKSB7XG4gICAgICAgICAgICAgICAgcG9pbnQuY2xhc3NOYW1lICs9ICcgaXNBY3RpdmUnO1xuICAgICAgICAgICAgfSBlbHNlIGlmKGkgIT09IGluZCAmJiBwb2ludC5jbGFzc05hbWUubWF0Y2goJ2lzQWN0aXZlJykpIHtcbiAgICAgICAgICAgICAgICBwb2ludC5jbGFzc05hbWUgPSBwb2ludC5jbGFzc05hbWUucmVwbGFjZSgnIGlzQWN0aXZlJywgJycpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxufVxuXG5cblxuIl19